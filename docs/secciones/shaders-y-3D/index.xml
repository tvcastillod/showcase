<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computación Visual</title><link>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/</link><description>Recent content on Computación Visual</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/3d-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/3d-model/</guid><description>Introducción # En este ejercicio se exploran diferentes herramientas y lógicas disponibles para la creación de escenarios 3D en p5.js. Se buscó darle un enfoque de simulación de un videojuego, aplicando los conceptos de transformaciones espaciales, árboles de transformación, HUD, movimiento de cámara, iluminación, entre otros. De esta manera, se pueden analizar las distintas alternativas disponibles para la creación de estos escenarios y también sus fortalezas y debilidades. Antecedentes # Transformaciones Espaciales # Las transformaciones espaciales son operaciones que se realizan sobre un objeto para cambiar su posición, orientación o escala.</description></item><item><title/><link>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/Coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/Coloring/</guid><description>Coloring y modos de fusión # Introducción # Los modos de fusión se utilizan para controlar cómo se mezclan dos colores entre sí. En la edición de imágenes digitales, estos modos se utilizan para componer imágenes o generar efectos que permiten oscurecer, aclarar o resaltar ciertos colores de una imagen. Un color en glsl se define como una variable vec4 de valores rgba float normalizados, es decir, cada uno está en el rango de [0.</description></item><item><title/><link>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/Procesamiento-de-Imagen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/Procesamiento-de-Imagen/</guid><description>Procesamiento de Imágenes y máscaras # Introducción # Cuando hablamos de procesamiento de imágenes, nos referimos a un conjunto de técnicas aplicadas a imágenes con el propósito de mejorar la calidad o facilitar la búsqueda de información. En webgl se utiliza la texturización en el procesamiento de imágenes. En este caso estamos interesados en explorar el uso de máscaras para modificar las imágenes con el fin de obtener resultados como una mayor nitidez en la imágen o detectar los bordes de los objetos que se encuentran dentro de esta.</description></item><item><title/><link>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/texture-tinting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/texture-tinting/</guid><description>Introducción # En este ejercicio se utilizaron shaders para aplicar un efecto de tintado a una textura. Esto para poder entender las texturas en el campo de los shaders y poder observar sus ventajas con respecto a la programación tradicional por software. Antecedentes # Shaders # Un shader es un programa que se ejecuta en la GPU, en lugar de la CPU. Esto permite que la GPU pueda realizar operaciones de forma paralela, lo que la hace mucho más eficiente que la CPU para realizar operaciones gráficas.</description></item><item><title/><link>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/posteffects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/posteffects/</guid><description>Introducción # En este ejercicio se ha realizado un ejemplo de postprocesado de una imagen. Aplicando distintos tipos de shaders a una misma imagen para ver los resultados que se obtienen y, además, examinar la relación entre dichos shaders y el orden en el que se aplican.
Antecedentes # Postprocesado # Los postefectos (o postprocesado) se refieren a las técnicas utilizadas después de la renderización de una imagen o un cuadro en una escena en tiempo real.</description></item><item><title/><link>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/procedural_texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jorodriguezal.github.io/showcase/docs/secciones/shaders-y-3D/procedural_texturing/</guid><description>Procedural Texturing # Introducción # La textura por procedimientos es una técnica de generación de texturas que utiliza algoritmos para crear texturas de forma automática. Esta técnica se puede emplear tanto para generar texturas realistas como no realistas, y permite simular superficies de materiales naturales o artificiales tanto en entornos 2D como 3D. Al utilizar algoritmos, se pueden especificar parámetros y detalles para variar la textura generada, lo que brinda un alto grado de control y flexibilidad en el proceso creativo.</description></item></channel></rss>